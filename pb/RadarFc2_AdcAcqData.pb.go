// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: proto/RadarFc2_AdcAcqData.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//* @brief  adc acquisition data type
type AdcAcq_DataType int32

const (
	AdcAcq_DataType_RESERVED                AdcAcq_DataType = 0 // reserved type
	AdcAcq_DataType_ADC_ACQ_TYPE_FRAME_HEAD AdcAcq_DataType = 1 // frame head type
	AdcAcq_DataType_ADC_ACQ_TYPE_CHIRP_HEAD AdcAcq_DataType = 2 // chirp head type
	AdcAcq_DataType_ADC_ACQ_TYPE_CHIRP_DATA AdcAcq_DataType = 3 // chirp data type
	AdcAcq_DataType_ADC_ACQ_TYPE_CHIRP_TAIL AdcAcq_DataType = 4 // frame tail type
)

// Enum value maps for AdcAcq_DataType.
var (
	AdcAcq_DataType_name = map[int32]string{
		0: "RESERVED",
		1: "ADC_ACQ_TYPE_FRAME_HEAD",
		2: "ADC_ACQ_TYPE_CHIRP_HEAD",
		3: "ADC_ACQ_TYPE_CHIRP_DATA",
		4: "ADC_ACQ_TYPE_CHIRP_TAIL",
	}
	AdcAcq_DataType_value = map[string]int32{
		"RESERVED":                0,
		"ADC_ACQ_TYPE_FRAME_HEAD": 1,
		"ADC_ACQ_TYPE_CHIRP_HEAD": 2,
		"ADC_ACQ_TYPE_CHIRP_DATA": 3,
		"ADC_ACQ_TYPE_CHIRP_TAIL": 4,
	}
)

func (x AdcAcq_DataType) Enum() *AdcAcq_DataType {
	p := new(AdcAcq_DataType)
	*p = x
	return p
}

func (x AdcAcq_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdcAcq_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_RadarFc2_AdcAcqData_proto_enumTypes[0].Descriptor()
}

func (AdcAcq_DataType) Type() protoreflect.EnumType {
	return &file_proto_RadarFc2_AdcAcqData_proto_enumTypes[0]
}

func (x AdcAcq_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdcAcq_DataType.Descriptor instead.
func (AdcAcq_DataType) EnumDescriptor() ([]byte, []int) {
	return file_proto_RadarFc2_AdcAcqData_proto_rawDescGZIP(), []int{0}
}

// @brief   Parameters used to define a frame head
type AdcAcq_FrameHeadType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	U32FrameStart uint32 `protobuf:"varint,1,opt,name=u32FrameStart,proto3" json:"u32FrameStart,omitempty"`
	U32FrameSeq   uint32 `protobuf:"varint,2,opt,name=u32FrameSeq,proto3" json:"u32FrameSeq,omitempty"`
	U32FrameLen   uint32 `protobuf:"varint,3,opt,name=u32FrameLen,proto3" json:"u32FrameLen,omitempty"`
	U64LocalTime  uint64 `protobuf:"varint,4,opt,name=u64LocalTime,proto3" json:"u64LocalTime,omitempty"`
	U64TimeStamp  uint64 `protobuf:"varint,5,opt,name=u64TimeStamp,proto3" json:"u64TimeStamp,omitempty"`
	U32FrameInfo  uint32 `protobuf:"varint,6,opt,name=u32FrameInfo,proto3" json:"u32FrameInfo,omitempty"`
	U32ChirpInfo  uint32 `protobuf:"varint,7,opt,name=u32ChirpInfo,proto3" json:"u32ChirpInfo,omitempty"`
}

func (x *AdcAcq_FrameHeadType) Reset() {
	*x = AdcAcq_FrameHeadType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdcAcq_FrameHeadType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdcAcq_FrameHeadType) ProtoMessage() {}

func (x *AdcAcq_FrameHeadType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdcAcq_FrameHeadType.ProtoReflect.Descriptor instead.
func (*AdcAcq_FrameHeadType) Descriptor() ([]byte, []int) {
	return file_proto_RadarFc2_AdcAcqData_proto_rawDescGZIP(), []int{0}
}

func (x *AdcAcq_FrameHeadType) GetU32FrameStart() uint32 {
	if x != nil {
		return x.U32FrameStart
	}
	return 0
}

func (x *AdcAcq_FrameHeadType) GetU32FrameSeq() uint32 {
	if x != nil {
		return x.U32FrameSeq
	}
	return 0
}

func (x *AdcAcq_FrameHeadType) GetU32FrameLen() uint32 {
	if x != nil {
		return x.U32FrameLen
	}
	return 0
}

func (x *AdcAcq_FrameHeadType) GetU64LocalTime() uint64 {
	if x != nil {
		return x.U64LocalTime
	}
	return 0
}

func (x *AdcAcq_FrameHeadType) GetU64TimeStamp() uint64 {
	if x != nil {
		return x.U64TimeStamp
	}
	return 0
}

func (x *AdcAcq_FrameHeadType) GetU32FrameInfo() uint32 {
	if x != nil {
		return x.U32FrameInfo
	}
	return 0
}

func (x *AdcAcq_FrameHeadType) GetU32ChirpInfo() uint32 {
	if x != nil {
		return x.U32ChirpInfo
	}
	return 0
}

// @brief   Parameters used to define a chirp head
type AdcAcq_ChirpHeadType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	U32HeadInfo uint32 `protobuf:"varint,1,opt,name=u32HeadInfo,proto3" json:"u32HeadInfo,omitempty"`
}

func (x *AdcAcq_ChirpHeadType) Reset() {
	*x = AdcAcq_ChirpHeadType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdcAcq_ChirpHeadType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdcAcq_ChirpHeadType) ProtoMessage() {}

func (x *AdcAcq_ChirpHeadType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdcAcq_ChirpHeadType.ProtoReflect.Descriptor instead.
func (*AdcAcq_ChirpHeadType) Descriptor() ([]byte, []int) {
	return file_proto_RadarFc2_AdcAcqData_proto_rawDescGZIP(), []int{1}
}

func (x *AdcAcq_ChirpHeadType) GetU32HeadInfo() uint32 {
	if x != nil {
		return x.U32HeadInfo
	}
	return 0
}

// @brief   Parameters used to define a chirp one channel sample data
type AdcAcq_ChirpChSampleDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	U32AChSampleData []uint32 `protobuf:"varint,1,rep,packed,name=u32aChSampleData,proto3" json:"u32aChSampleData,omitempty"` // nrSamples
}

func (x *AdcAcq_ChirpChSampleDataType) Reset() {
	*x = AdcAcq_ChirpChSampleDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdcAcq_ChirpChSampleDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdcAcq_ChirpChSampleDataType) ProtoMessage() {}

func (x *AdcAcq_ChirpChSampleDataType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdcAcq_ChirpChSampleDataType.ProtoReflect.Descriptor instead.
func (*AdcAcq_ChirpChSampleDataType) Descriptor() ([]byte, []int) {
	return file_proto_RadarFc2_AdcAcqData_proto_rawDescGZIP(), []int{2}
}

func (x *AdcAcq_ChirpChSampleDataType) GetU32AChSampleData() []uint32 {
	if x != nil {
		return x.U32AChSampleData
	}
	return nil
}

// @brief   Parameters used to define a frame end
type AdcAcq_FrameTailType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	U32EndFlag1 uint32 `protobuf:"varint,1,opt,name=u32EndFlag1,proto3" json:"u32EndFlag1,omitempty"`
	U32EndFlag2 uint32 `protobuf:"varint,2,opt,name=u32EndFlag2,proto3" json:"u32EndFlag2,omitempty"`
}

func (x *AdcAcq_FrameTailType) Reset() {
	*x = AdcAcq_FrameTailType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdcAcq_FrameTailType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdcAcq_FrameTailType) ProtoMessage() {}

func (x *AdcAcq_FrameTailType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdcAcq_FrameTailType.ProtoReflect.Descriptor instead.
func (*AdcAcq_FrameTailType) Descriptor() ([]byte, []int) {
	return file_proto_RadarFc2_AdcAcqData_proto_rawDescGZIP(), []int{3}
}

func (x *AdcAcq_FrameTailType) GetU32EndFlag1() uint32 {
	if x != nil {
		return x.U32EndFlag1
	}
	return 0
}

func (x *AdcAcq_FrameTailType) GetU32EndFlag2() uint32 {
	if x != nil {
		return x.U32EndFlag2
	}
	return 0
}

// @brief   Parameters used to define a adc acquisition data stream message
type AdcAcq_MsgType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnuAdcAcqDataType AdcAcq_DataType `protobuf:"varint,1,opt,name=enuAdcAcqDataType,proto3,enum=RadarFc2_AdcAcqData.AdcAcq_DataType" json:"enuAdcAcqDataType,omitempty"`
	PDataStream       []byte          `protobuf:"bytes,2,opt,name=pDataStream,proto3" json:"pDataStream,omitempty"`
}

func (x *AdcAcq_MsgType) Reset() {
	*x = AdcAcq_MsgType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdcAcq_MsgType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdcAcq_MsgType) ProtoMessage() {}

func (x *AdcAcq_MsgType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_RadarFc2_AdcAcqData_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdcAcq_MsgType.ProtoReflect.Descriptor instead.
func (*AdcAcq_MsgType) Descriptor() ([]byte, []int) {
	return file_proto_RadarFc2_AdcAcqData_proto_rawDescGZIP(), []int{4}
}

func (x *AdcAcq_MsgType) GetEnuAdcAcqDataType() AdcAcq_DataType {
	if x != nil {
		return x.EnuAdcAcqDataType
	}
	return AdcAcq_DataType_RESERVED
}

func (x *AdcAcq_MsgType) GetPDataStream() []byte {
	if x != nil {
		return x.PDataStream
	}
	return nil
}

var File_proto_RadarFc2_AdcAcqData_proto protoreflect.FileDescriptor

var file_proto_RadarFc2_AdcAcqData_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x52, 0x61, 0x64, 0x61, 0x72, 0x46, 0x63, 0x32,
	0x5f, 0x41, 0x64, 0x63, 0x41, 0x63, 0x71, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x52, 0x61, 0x64, 0x61, 0x72, 0x46, 0x63, 0x32, 0x5f, 0x41, 0x64, 0x63, 0x41,
	0x63, 0x71, 0x44, 0x61, 0x74, 0x61, 0x22, 0x90, 0x02, 0x0a, 0x14, 0x41, 0x64, 0x63, 0x41, 0x63,
	0x71, 0x5f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x75, 0x33, 0x32, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x33, 0x32, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x33, 0x32, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x33, 0x32, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x33, 0x32, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x33,
	0x32, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x36, 0x34,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x75, 0x36, 0x34, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x75, 0x36, 0x34, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x75, 0x36, 0x34, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x33, 0x32, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x33, 0x32, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x33, 0x32, 0x43, 0x68, 0x69, 0x72,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x33, 0x32,
	0x43, 0x68, 0x69, 0x72, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a, 0x14, 0x41, 0x64, 0x63,
	0x41, 0x63, 0x71, 0x5f, 0x43, 0x68, 0x69, 0x72, 0x70, 0x48, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x33, 0x32, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x33, 0x32, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x1c, 0x41, 0x64, 0x63, 0x41, 0x63, 0x71, 0x5f, 0x43, 0x68,
	0x69, 0x72, 0x70, 0x43, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x33, 0x32, 0x61, 0x43, 0x68, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x75,
	0x33, 0x32, 0x61, 0x43, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x5a, 0x0a, 0x14, 0x41, 0x64, 0x63, 0x41, 0x63, 0x71, 0x5f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54,
	0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x33, 0x32, 0x45, 0x6e,
	0x64, 0x46, 0x6c, 0x61, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x33,
	0x32, 0x45, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x33, 0x32,
	0x45, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x75, 0x33, 0x32, 0x45, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x32, 0x22, 0x86, 0x01, 0x0a, 0x0e,
	0x41, 0x64, 0x63, 0x41, 0x63, 0x71, 0x5f, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52,
	0x0a, 0x11, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x63, 0x41, 0x63, 0x71, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x52, 0x61, 0x64, 0x61,
	0x72, 0x46, 0x63, 0x32, 0x5f, 0x41, 0x64, 0x63, 0x41, 0x63, 0x71, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x41, 0x64, 0x63, 0x41, 0x63, 0x71, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x11, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x63, 0x41, 0x63, 0x71, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2a, 0x93, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x63, 0x41, 0x63, 0x71, 0x5f,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x44, 0x43, 0x5f, 0x41, 0x43,
	0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x5f, 0x48, 0x45, 0x41,
	0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x44, 0x43, 0x5f, 0x41, 0x43, 0x51, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x49, 0x52, 0x50, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0x02,
	0x12, 0x1b, 0x0a, 0x17, 0x41, 0x44, 0x43, 0x5f, 0x41, 0x43, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x48, 0x49, 0x52, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x03, 0x12, 0x1b, 0x0a,
	0x17, 0x41, 0x44, 0x43, 0x5f, 0x41, 0x43, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48,
	0x49, 0x52, 0x50, 0x5f, 0x54, 0x41, 0x49, 0x4c, 0x10, 0x04, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_RadarFc2_AdcAcqData_proto_rawDescOnce sync.Once
	file_proto_RadarFc2_AdcAcqData_proto_rawDescData = file_proto_RadarFc2_AdcAcqData_proto_rawDesc
)

func file_proto_RadarFc2_AdcAcqData_proto_rawDescGZIP() []byte {
	file_proto_RadarFc2_AdcAcqData_proto_rawDescOnce.Do(func() {
		file_proto_RadarFc2_AdcAcqData_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_RadarFc2_AdcAcqData_proto_rawDescData)
	})
	return file_proto_RadarFc2_AdcAcqData_proto_rawDescData
}

var file_proto_RadarFc2_AdcAcqData_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_RadarFc2_AdcAcqData_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_RadarFc2_AdcAcqData_proto_goTypes = []interface{}{
	(AdcAcq_DataType)(0),                 // 0: RadarFc2_AdcAcqData.AdcAcq_DataType
	(*AdcAcq_FrameHeadType)(nil),         // 1: RadarFc2_AdcAcqData.AdcAcq_FrameHeadType
	(*AdcAcq_ChirpHeadType)(nil),         // 2: RadarFc2_AdcAcqData.AdcAcq_ChirpHeadType
	(*AdcAcq_ChirpChSampleDataType)(nil), // 3: RadarFc2_AdcAcqData.AdcAcq_ChirpChSampleDataType
	(*AdcAcq_FrameTailType)(nil),         // 4: RadarFc2_AdcAcqData.AdcAcq_FrameTailType
	(*AdcAcq_MsgType)(nil),               // 5: RadarFc2_AdcAcqData.AdcAcq_MsgType
}
var file_proto_RadarFc2_AdcAcqData_proto_depIdxs = []int32{
	0, // 0: RadarFc2_AdcAcqData.AdcAcq_MsgType.enuAdcAcqDataType:type_name -> RadarFc2_AdcAcqData.AdcAcq_DataType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_RadarFc2_AdcAcqData_proto_init() }
func file_proto_RadarFc2_AdcAcqData_proto_init() {
	if File_proto_RadarFc2_AdcAcqData_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_RadarFc2_AdcAcqData_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdcAcq_FrameHeadType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RadarFc2_AdcAcqData_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdcAcq_ChirpHeadType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RadarFc2_AdcAcqData_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdcAcq_ChirpChSampleDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RadarFc2_AdcAcqData_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdcAcq_FrameTailType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_RadarFc2_AdcAcqData_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdcAcq_MsgType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_RadarFc2_AdcAcqData_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_RadarFc2_AdcAcqData_proto_goTypes,
		DependencyIndexes: file_proto_RadarFc2_AdcAcqData_proto_depIdxs,
		EnumInfos:         file_proto_RadarFc2_AdcAcqData_proto_enumTypes,
		MessageInfos:      file_proto_RadarFc2_AdcAcqData_proto_msgTypes,
	}.Build()
	File_proto_RadarFc2_AdcAcqData_proto = out.File
	file_proto_RadarFc2_AdcAcqData_proto_rawDesc = nil
	file_proto_RadarFc2_AdcAcqData_proto_goTypes = nil
	file_proto_RadarFc2_AdcAcqData_proto_depIdxs = nil
}
